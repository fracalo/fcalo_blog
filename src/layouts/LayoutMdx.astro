---
import fs from "fs/promises";
import { join } from "path";
import type { Post as Props } from "../utils/posts";
import { getFormattedDate } from "../utils/posts";
import { getTitleTransName } from '../utils/shared'
import GlobalLayout from "./GlobalLayout.astro";

export type { Props };

const { frontmatter, readingTime } = Astro.props;
const { title, date, summary, social_image } = frontmatter;
const formattedDate = getFormattedDate(date);
const { VITE_SITE } = import.meta.env;

const nameMetas: Record<string, string> = {
    "twitter:card": "summary_large_image",
    "twitter:creator": "@Fracal0",
    "twitter:site": "@Fracal0",
    "twitter:title": title,
    "twitter:description": summary,
};
const propMetas: Record<string, string> = {
    "og:title": title,
    "og:type": "article",
    "og:description": summary,
    "og:url": Astro.url.href,
    "og:site_name": "Outskirt Dev",
    "og:image:type": "image/png",
    "og:image:width": "1200",
    "og:image:height": "600",
    "og:locale": "en_GB"
};

if (social_image) {
    const dirname = import.meta.url
        .replace(/[^/]+$/, "")
        .replace("file://", "");
    const projRoot = join(dirname, "../../");
    const socialImagePathTree = social_image.split("/");
    const socialImageName = socialImagePathTree[
        socialImagePathTree.length - 1
    ] as string;
    fs.copyFile(
        join(projRoot, social_image),
        join(projRoot, "/static/images/social/", socialImageName)
    );
    const socialUri = `${VITE_SITE}/images/social/${socialImageName}`;
    nameMetas["twitter:image:src"] = socialUri;
    propMetas["og:image"] = socialUri;
}
---

<GlobalLayout
    title={title}
    description={summary}
    propMetas={propMetas}
    nameMetas={nameMetas}
>
    <article class="blog-article pt-6 justify-center flex flex-1">
        <div class="content-wrapper p-2">
            <h1 class="post-title" transition:name={getTitleTransName(title)}>
                {title}
            </h1>
            <div class="flex text-md text-gray-500 my-2">
                <p class="pr-2">{formattedDate}</p>
                {readingTime && <p class="pr-2">~</p>}
                <p>{readingTime?.text}</p>
            </div>
            <div class="pt-8">
                <slot />
            </div>
        </div>
    </article>
</GlobalLayout>
