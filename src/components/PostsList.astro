---
import PostListItem from '../components/PostListItem.astro';
import type { Post } from '../utils/posts'
import { 
    pageSize,
    orderPosts,
    pagePosts,
} from '../utils/posts'
import Pagination from './Pagination.astro';

type Props = {
    page?: number,
}
const { page = 1 } = Astro.props

let posts: Array<Post> = []
try {
    posts = await Astro.glob<Post>('../pages/blog/**/*.{mdx,md}')
}
catch (e) {
    console.log(e)
}
const orderedPosts = orderPosts(posts)
const pagedPosts = pagePosts(orderedPosts, pageSize, page || 1)
const totalPages = Math.ceil(posts.length/pageSize)
const nextLink = totalPages > page ? new URL(`/${page+1}`, Astro.url) : undefined
const prevLink = page > 1 ? new URL(`/${page-1}`, Astro.url) : undefined
---

{pagedPosts.map((x: Post, i: number) => (
    <PostListItem 
        title={x.frontmatter.title} 
        summary={x.frontmatter.summary} 
        date={x.frontmatter.date}
        readingTime={x.readingTime?.text}
        isLast={i === (pagedPosts.length - 1)}
        url={new URL(x.url!, Astro.url)}
    />
))}
<Pagination page={page} totalPages={totalPages} nextLink={nextLink} prevLink={prevLink} />

